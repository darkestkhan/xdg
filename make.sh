#!/usr/bin/env bash

# Run the tests and count failed tests.
function run_tests ()
{
  x=0

  for file in tests/bin/*
  do
    if test -x ${file}
    then
      ./${file}
    fi
    if test 0 -ne $?
    then
      x=$((x+=1))
    fi
  done

  echo "Number of failed tests: $x"
}

# Build the library
function make ()
{
  if test ! -d lib
  then
    mkdir lib
  fi

  if test ! -d obj
  then
    mkdir obj
  fi

  gprbuild xdg.gpr
  echo ""
}

# Build the tests
function make_tests
{
  if test ! -d tests/obj
  then
    mkdir tests/obj
  fi

  if test ! -d tests/bin
  then
    mkdir tests/bin
  fi

  gprbuild xdg-tests.gpr
  echo ""
}

# Clean up files generated by compilation process
function clean
{
  if [ "$(ls -A lib)" ]
  then
    rm lib/*
  fi

  if [ "$(ls -A obj)" ]
  then
    rm obj/*
  fi

  if [ "$(ls -A tests/obj)" ]
  then
    rm tests/obj/*
  fi

  if [ "$(ls -A tests/bin)" ]
  then
    rm tests/bin/*
  fi
}

if test $# -eq 0
then
  echo "No valid argument specified"
  echo ""
  echo "./make.sh xdg     to build library only"
  echo "./make.sh check   to build tests and run them"
  echo "./make.sh all     to build library, tests and run the tests"
  echo "./make.sh clean   to clean up all files generated by compilation"
  exit 0
fi

if test $1 = "xdg"
then
  clean
  make
elif test $1 = "check"
then
  clean
  make_tests
  run_tests
elif test $1 = "all"
then
  clean
  make
  make_tests
  run_tests
elif test $1 = "clean"
then
  clean
fi

